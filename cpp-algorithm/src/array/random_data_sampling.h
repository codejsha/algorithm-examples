#ifndef CPP_ALGORITHM_RANDOM_DATA_SAMPLING_H
#define CPP_ALGORITHM_RANDOM_DATA_SAMPLING_H

#include <vector>

namespace RandomDataSampling
{
    /**
     * \brief Randomly select k elements from the array.
     * \param k sample size
     * \param arr input array
     * \return result array
     */
    auto OfflineRandomSampling(int k, std::vector<int>& arr) -> std::vector<int>;

    // TODO: Implement OnlineRandomSampling
    /**
     * \brief Randomly select k elements from the array.
     * \param begin begin iterator
     * \param end end iterator
     * \param k sample size
     * \return result array
     */
    auto OnlineRandomSampling(const std::vector<int>::const_iterator& begin,
                              const std::vector<int>::const_iterator& end, int k) -> std::vector<int>;

    /**
     * \brief Compute permutation of the array generated by random sampling.
     * \param n sample size
     * \return result array
     */
    auto ComputeRandomPermutation(int n) -> std::vector<int>;
}

#endif
