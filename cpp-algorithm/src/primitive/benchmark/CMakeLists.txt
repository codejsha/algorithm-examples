find_package(GSL REQUIRED)
find_package(benchmark REQUIRED)

include_directories(${CMAKE_SOURCE_DIR}/src/include)
include_directories(${CMAKE_SOURCE_DIR}/src/primitive)

macro(add_target_benchmark target)
    string(REPLACE "_benchmark" "" target_name ${target})
    add_executable(${target} "${target}.cpp" "${CMAKE_SOURCE_DIR}/src/primitive/${target_name}.cpp")
    target_link_libraries(${target} PRIVATE benchmark::benchmark_main ${ARGN})
    target_compile_definitions(${target} PUBLIC -DBENCHMARK_STATIC_DEFINE)
    if(MSVC)
        ### Edit and Continue for CMake projects
        target_compile_options(${target} PUBLIC "/Zi")
        target_link_options(${target} PUBLIC "/INCREMENTAL")
    endif()
endmacro()

add_target_benchmark(arithmetic_operation_benchmark)
# add_target_benchmark(binary_exponentiation_benchmark)
# add_target_benchmark(closest_integer_benchmark)
add_target_benchmark(compute_parity_benchmark)
# add_target_benchmark(generate_random_number_benchmark)
# add_target_benchmark(integer_palindrome_benchmark)
add_target_benchmark(power_operation_benchmark)
add_target_benchmark(rectangle_intersection_benchmark)
# add_target_benchmark(reverse_bit_benchmark)
# add_target_benchmark(reverse_digit_benchmark)
add_target_benchmark(swap_bit_benchmark)
